ER모델
여러개의 부서
부서 : 부서명 + 번호 + 부서장 + 부서장의 부임날짜

한부서에서 여러개의 프로젝트를 관리한다. 
프로젝트 : 이름 + 번호 / 한 곳에 위치한다?

사원 : 주민등록 번호 + 주소 + 월급 + 성별 + 생년월일 
	여러 프로젝트에 관여한다. + 프로젝트의 주당 근무시간
	각직원의 직속상사 -> 약한 엔티티 타입?

약한 엔티티 타입
부양가족 : 이름 + 성별 + 생년월일 + 관계 + 추가하고 싶은것은 사원번호로 추가하고 싶다.
이름을 키로 가져야 하는 게
키는 강한 엔티티 타입과 약한 엔티티 타입 사이의 무언가가 아니라
약한 엔티티 타입 안에서 검색하려고 할때 사용되어야 할 무언가이다.

composite(복합) attribute - 하나의 데이터를 여러개의 attribute로 나타내는것
다치 attribute
복합 다치 attribute를 만들었다면 엔티티 타입으로 만드는 게 더 좋지 않을까 고려해봐야한다.
유도된 attribute

논리적 형태라서 표의 형태가 될것이고
물리적 형태라면 파일의 형태가 될것이다.

key attribute가 엔티티 타입마다 1개 이상씩 있어야한다 -> key값으로 찾아야 하니까 필요하다. -> 1개 이상이라는건 여러개의 인덱스파일을 만들 수도 있기 때문이다.
attribute가 없는 엔티티 타입은 존재하지 않는다.
복합 attribute를 만들 때 복합 attribute에 붙는 attribute는 두개 이상이어야한다.
의뢰인이 사용하고자 하는 방식에 맞게 데이터베이스를 만들어야한다.
요구사항이 부족하다면 의뢰인에게 물어본다.
ER다이어그램은 관계형데이터 모델로 변화한다.

데이터베이스는 작은 세계로, 실제 세상에서 적용될 상황도 고려해야한다.

key attribute가 한 개 만으로 기능을 할 수 없을 때 여러개를 만들어도 좋다.

다른 엔티티 사이의 관계를 어트리뷰트로 만든다면 한쪽에 있는데 한쪽에 없는 상황이 생길 수 있다.
하지만 관계타입을 사용하면 엔티티와 엔티티 사이에 둘다 존재해야 이어지기 때문에 관계타입을 사용하는 게 좋겠다.

의무적 참여 / 선택적 참여 -> 관계타입을 사용할 때 나눌 수 있는 조건이다.

순환관계타입으로 직속상사를 정의 해야한다.
의무적 / 선택적 참여를 판단하기 위해서??
부서장도 관계타입으로 표현하는 게 좋겠다
관계타입은 여러개를 만들 수도 있다.
관계타입에도 attribute가 붙을 수 있다.
다치 어트리뷰트가 관계타입으로 바뀔것이다.


객체 Entity
단독으로 존재하는 객체를 말하며 동일한 객체는 존재하지 않는다.
학생 한명이 객체가 된다.
객체의 집합 = Entity Type
ER모델에서 Entity Type은 사각형으로 나타낸다.

Weak Entity : 객체가 가진 속성들로는 객체를 정의할 수 없는 객체를 말한다.
		학과라는 객체는 A라는 학교와 B라는 학교 모두에 존재할 수 있기 때문에 
		학교라는 객체와의 관계를 명시해야 학과라는 객체를 정의 할 수 있다.

속성 attribute
simple attribute : 더 이상 나눠지지 않는 속성
composite attribute : 두개 이상의 속성으로 구성된 속성
			   ER다이어그램에서 속성으로 부터 또 속성이 나오고 있다면 복합 속성이다.
key attribute : 객체를 유일하게 구별할 수 있는 속성으로 다른 객체들과 중복되지 않는 고유한 값을 가진 속성
		  주로 객체를 식별하는데 사용된다. 
		  ER다이어그램에서 밑줄을 사용해 표현한다. 
multivalued attribute : 객체가 여러 값을 가질 수 있는 속성 -> 복수전공한 학생의 전공분야를 얘기할 때 
			    ER다이어그램에서 두개의 원으로 표현한다.
derived attribute : 다른 속성으로 부터 값이 결정될 수 있는 속성을 말한다. -> 나이는 주민등록번호에 의해 결정될 수 있다.
			ER다이어그램에서 점선으로 이루어진 원으로 표현한다.

관계 relation
관계를 맺는 두 엔티티 타입에대해 한 개체가 얼마나 많은 다른 개체와 관련될 수 있는지를 나타내는 제약조건
1) 카디널리티 비율 제약조건
관계를 맺는 두 엔티티 타입에 대해 한 개체가 얼마나 많은 개체와 관련될 수 있는지를 나타내는 제약조건을 뜻한다.
1 : 1 / 1 : N / N : M

2) 참여 제약조건
관계를 맺는 두 엔티티 타입에 대해 한 개체의 존재가 다른 개체의 존재에 의존하는지 여부를 나타내는 제약조건.
전체 참여 : 하나 또는 그 이상의 개체가 참여
부분 참여 : 선택적인 참여
부분 참여는 한줄로 전체참여는 두줄로 관계타입과 연결된다.
 


2024-10-31
도메인에 속하는 원자값을 넣어야한다.
나이 칸에 음수를 넣을 수 없는것처럼

키 제약조건 = 키 속성은 중복된 값이 존재하면 안된다.
속성의 조합 튜플로 키 속성을 만들 수 도 있다.
슈퍼 키는 여러개 있을 수 있고 가장 낮은 단계의 키이다.

의뢰인들의 의뢰에 새로운 타입의 데이터가 있을 수도 있는데 
데이터를 잘 들여다 보면 분별력을 가지고 있는 속성을 찾을 수 있다.

기본 키 (primary key) 캐리를 하는 키
후보 키 (candidate key) 슈퍼 키에서 두개 이상일 때 하나씩 빼도 키가 될 수 있을 때
버스를 타는 키(super key)

관계제약조건을 지키고 중복이 없으려고 표를 나눠 놓았다.

엔티티 무결성 제약조건
기본 키속성은 null이 들어갈 수 없다.

참조 무결성 제약조건 -> ER모델의 관계
외래키 : 한쪽에서는 기본키이지만 다른곳에서는 키가 아닌 그냥 속성일 때
외래키는 다른 표를 참조할 때 사용된다.
외래키는 동일한 릴레이션의 애트리뷰트를 참조할 수도 있음
	-> 순환 관계
의무적 참여라면 null이 들어 갈 수 없고
선택적 참여는 null이 들어 갈 수 있다.

삽입과 삭제에서 데이터베이스 상태에 변화를 가져와서 제약조건들이 지켜지지 않을 경우가 있다.
삽입 -> 도메인, 키, &&
삭제 -> 참조 무결성 제약조건에 걸린다. B+트리와 같이 삭제가 삭제를 부르는 경우가 일어날 수 있다.(연쇄 삭제)
갱신은 삭제후 삽입과 같은 의미로 볼 수 있다.


스키마는 틀 
상태는 변경이 잘 일어난다.









