내용정리

데이터베이스 방식에서 단일 저장소에 데이터가 저장되고 여러 사용자가 질의 트랜잭션 응용프로그램들을 통해서 이 데이터를 공유하게 된다. 
파일 처리 방식에 비하여 데이터베이스 방식이 갖는 특징
	데이터 베이스 시스템의 자기 기술성
	프로그램과 데이터의 격리 및 데이터 추상화
	데이터에 대한 다중 뷰의 제공
		사용자의 역할과 권한에 맞는 데이터에 접근할 수 있도록 데이터베이스에 대해 필요한 부분만을 추출해서 제공할 수 있는 뷰 기능을 지원한다.
	데이터의 공유와 다수 사용자 트랜잭션 처리
		여러 사용자가 동시에 데이터베이스에 접근할 수 있는 기능을 제공한다.


자기기술성
본인한테 저장되어있는 데이터베이스가 어떤것인가를 표현하는 것
데이터베이스에 대한 데이터를 통하여 데이터의 구조를 직접알고있지않아도 데이터를 액세스 할 수 있다.**
데이터가 바뀌면 프로그램이 바뀌어야 하는데
이를 프로그램의 데이터 의존성이라고 한다.
프로그램이 메타데이터에 접근해서 데이터가 어떤 방식으로 저장되어 있는지 파악하고 데이터를 액세스해서 메타데이터에서 읽은 대로 파일을 읽어온다.

		
트랜잭션 - 데이터베이스의 상태를 바꾸는 일종의 직업단위

데이터베이스 시스템은 데이터베이스 자체뿐만 아니라 데이터 베이스의 구조와 제약조건에 대한 완전한 정의까지 가지고 있다
데이터베이스에 속하는 각 파일들의 구조, 각데이터 항목의 타입과 저장형식, 데이터에 대한 다양한 제약조건등을 나타낸다

DBMS - 데이터베이스관리시스템
DBMS 목록(catalog) 
카탈로그에 저장된 정보를 메타데이터라 부른다.
데이터가 무엇인지를 설명하는 데이터



	화일시스템이란
저장장치 내에서 데이터를 읽고 쓰기 위해 미리 정해진 약속이다.
데이터를 효과적으로 관리하기 위해서 파일을 체계적으로 기록 및 보관하는 방식을 말하며 계층구조로 데이터가 저장되고 조직화 되도록 하는 매커니즘
컴퓨터에서 파일이나 자료를 쉽게 발견 및 접근할 수 있도록 보관 또는 조직하는 체제를 가리키는 말이다.
DBMS가 등장하지 않았을 때 부터 사용되어 왔다.
기본적인 구성요소는 순차적인 레코드
어떤 응용 목적을 위해 함께 저장된 레코드 집합

	데이터를 화일로 구성하는 이유
메인 메모리에 전부 적재하기에 양이 너무 많아서

Red-Black-Tree
레드 블랙 트리는 이진트리의 특수한 형태로서, 컴퓨터 공학 분야에서 숫자등의 비교가능한 자료를 정리하는데 쓰이는 자료구조(삽입 삭제 검색을 할 수 있다)
이진탐색트리의 유형중 하나로 B트리를 발전시켜서 만들어냈다. 실제사용에서 효율적이고 최악의 경우에도 상당히 우수한 실행시간을 보인다.
1. 노드는 레드 혹은 블랙 중의 하나이다.
2. 루트노드는 블랙이다.
3. 모든 리프노드들은 블랙이다.
4. 레드노드의 자식노드 양쪽은 언제나 모두 블랙이다.
5. 어떤 노드로부터 시작되어 그에 속한 하위 리프 노드에 도달하는 모든 경로에는 리프노드를 제외하면 모두 같은 개수의 블랙노드가 있다.
Avl-Tree는 레드블랙트리보다 더 엄격하게 균형이 잡혀있기 때문에 삽입과 삭제를 할 때 최악의 경우에는 더 많은 회전이 필요하다.

트리에 있는 내용을 읽는 동작은 기존의 이진트리와 동일하다.
삽입과 삭제의 경우 색변화와 최대 3회의 트리 회전이 필요하다.(삽입은 최대 2회)

삼촌노드들이 등장
부모노드의 옆노드를 의미


중간고사전 내용정리------------------------------------------------------------------------------------------
데이터 : 의미를 가지면서 기록될 수 있는 알려진 사실
데이터베이스 : 관련있는 데이터들의 모임
데이터베이스 관리시스템 : 데이터베이스를 생성하고 관리하는 소프트웨어 패키지
데이터베이스 시스템 : 데이터베이스 시스템 + 데이터베이스 + 응용프로그램
작은세계 : 데이터베이스 구축의 대상이 되는 실세계의 일부분

데이터베이스 시스템 구성요소
응용프로그램 
-> DBMS(데이터베이스 시스템) 
-> 데이터베이스 
-> DBMS 
-> User

문서 데이터베이스
-멀티미디어DB
-GIS 지리 정보 시스템 지구의 위치 기반 서비스를 사용한다.
-Data Warehouse 데이터 창고
	데이터 마이닝 - 데이터 창고에서 의미없던 데이터들의 의미를 찾고 서로 연관성 있는 데이터로 만든다.
	빅데이터(축적된 대규모 데이터)에서 패턴 규칙 관계 등을 발굴해 내는 기술이다.
-실시간 DB 데이터의 정확도 보다 근사치의 결과로 빠르게 결정을 내릴 수 있는 방법 추구



파일과 파일시스템
파일 시스템 -> 소프트웨어
운영체제에서 관리하는 소프트웨어로 데이터베이스와는 구별되는 기능이다.
	
	파일
물리적인 비트의 연속
순차적인 레코드들로 구성
레코드는 연관된 필드들의 모임
레코드 -> 일정한 규칙을 가지고 연관된 필드들로 모여져 있는것


파일 시스템은 데이터에대한 프로그램 의존도가 높다.
	새로운 항목을 만든다고 했을 때 데이터만 추가하면 프로그램이 알아서 항목을 추가해주는 방식이 아니라
	프로그램의 구조를 바꿔야해서 사용자들이 그동안 사용할 수 없다.
파일 시스템은 데이터의 중복성 문제가 있다.
	같은 내용의 데이터가 A에도 있고 B에도 있는 형태로
	두개 이상 있는 것은 큰 문제가 되지 않지만 - 공간낭비
	데이터가 한곳만 업데이트 되고 다른곳은 업데이트 되지 않을 수도 있다. - 불일치, 시스템적 문제	
	하나를 업데이트 하고 다른곳의 데이터를 업데이트 하는 사이에 접근할 수도 있기 때문에

데이터베이스에는 있지만 파일시스템에는 없는 것
데이터모델링 개념
	데이터를 어떤식으로 구조화 할것인지 만들어보는것
	연관성을 표시할 수 있고 
질의어
	SQL
동시성제어
파손, 회복
보안

데이터베이스를 사용하면서 얻을 수 있는 효과
여러곳에 있는 데이터가 한곳에서 관리하니 효율성이 증가한다.
부서마다 다른 방식으로 자료를 관리하는것 보다 통합적으로 관리하는것이 비용이 적게 든다.
데이터베이스 내의 자료구조가 변경되어도 사용자에 대한 영향은 거의 없다.
응용프로그램의 상당한 부분을 DBMS가 처리하면서 시간이 많이 단축된다.
변경된값을 모든 사용자들에게 즉시 최신의 정보를 적용할 수 있다.


DBMS의 단점 
비용이 비싸다.
많지 않은 사용자가 사용하는 서비스라면 오히려 느려진다.
분산된 시스템을 사용하지 않아서 하나가 고장나면 모두 다운되어버리는 문제가 생길 수 있다.



ER 모델
조직체의 운영과 목적을 지원하기 위해 데이터베이스를  생성하는 과정

데이터의 모든 측면을 표현
중복 최소화			->		올바른
효율적 접근			->	    데이터베이스 설계
데이터 무결성
일관성 및 이해 용이 
일관성 = 데이터가 깨지면 안된다.
무결성 = 데이터가 마땅히 지켜야하는 조건


개념적 설계 -> ER모델
논리적 설계
물리적 설계 -> 하드웨어와 운영체제의 성능을 고려해서 요구사항에 맞게 설계

ER모델
강한 표현력
고도의 추상화 -> 인간이 생각한것과 비슷한 표현을 할 수 있다.
이해 용이

				
