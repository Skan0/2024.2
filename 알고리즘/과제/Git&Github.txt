Git & GitHub
Git
파일의 변화를 항상 기록하고 있다
무엇이 언제 누가 바꿨는지 전부 기록하고 있다.
같은 파일에 대한 다른 버전을 기록할 수 있다.
다른 버전들에 공통된 수정이 필요하다면 한번에 해주는 일을 해준다.
하나의 파일을 여러명이서 수정하기 좋다.
이전 버전의 파일이 수정사항이 없다면 다음 버전의 파일은 이전 버전의 링크를 나타내주기 때문에 git snapshot은 가볍다.

Github
클라우드에 있는 깃제공자
내 pc에 있는 깃히스토리를 가져와서 깃허브 웹사이트에 올린다.
다른 공동 작업자가 올려진것을 보고 받을 수 있다.
gitlab bitbucket도 같은 일을 한다.

VCS - version control system

Centralized version control
서버에 올리고 서버에서 다운받고 하던 형식이라 서버가 다운되거나 오프라인이면 작업을 할 수 없었다.

Distributed version control - git mercurial darcs과 같은게 있다.
서버에만 히스토리의 정보가 있는게 아니라
모든개발자들이 동일한 히스토리를 가지고 있고
이런형식은 서버가 다운되어도 개발자들이 동일한 히스토리를 가지고 있기 때문에 서로의 정보를 이용해서 서버를 복구 시킬수 있다.
오프라인에서도 작업을 할 수 있다.

Git의 탄생 배경
Linux Kernel Team에서 신버전이 나올 때마다 업데이트 하다가 BitKeeper이라는 것을 사용하고 편해졌다.
BitKeeper 사장이 더이상 공짜로 이용할 수 없다고 선언했다.
Linux의 창시자인 Linus Torvalds가 다른곳에서 장점을 가져오고 단점은 배제한 GIt을 만들어냈다.

Git을 사용하는 이유
가장 많이 사용
무료
오픈소스
가볍고 빠르다
오프라인에서도 일할 수 있다.
실수를 고쳐나가기가 쉽다.
쉽고 빠른 branching 각각의 기능별로 협업을 할 수 있다.
원하는 순간으로 돌아갈 수 있게 해주는 도구


Github & SourceTree
commit => git의 save
add => 저장을 원하는 파일들을 묶는 일
push => github에 업로드





