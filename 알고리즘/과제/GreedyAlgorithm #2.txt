다익스트라 최단경로 알고리즘
최단 경로 탐색 알고리즘
인공위성 GPS소프트웨어에서 사용함
음의 간선을 사용할 수 없다.
매 상황에서 가장 비용이 적은 노드를 선택해 임의의 과정을 반복한다.

작은문제가 큰문제안에 비슷하게 안에 들어가있는 문제
다이나믹 프로그래밍 유형중 하나다.
하나의 최단거리를 구할 때 그 이전까지 구했던 최단거리 정보를 그래도 사용한다는 특징이 있다.
가장 적은 값의 간선을 선택하기 때문에 그리디 알고리즘이라고 할 수 있다.

기존에 간 경로를 통해서 다른점으로 가야한다면 
1 - 2 = (3)
1 - 3 = (6)
2 - 3 = (1)
1 - 2 - 3 = (3) + (1) = (4)
1 - 2 - 3 < 1 - 3
해당점으로 가기위해서 지나야하는 노드의 비용도 합해서 계산한다.

바로 갈 수 없는 간선이 없는 노드와의 관계는 inf무한으로 둔다.
출발지점으로 둔 노드는 출발지점과의 거리를 0으로 둔다

다익스트라 알고리즘 구조 (출발노드로 부터 각노드까지의 최단경로 알고리즘)
1. 출발노드를 설정한다.
2. 최단거리 테이블을 초기화한다.
3. 방문하지 않은 노드 중에서 최단거리가 가장 짧은 노드를 선택한다.
4. 해당노드를 거쳐 다른 노드로 가는 비용을 계산하여 최단거리 테이블을 갱신한다.
5. 위 과정에서 3번과 4번을 반복한다.


방문하지 않은 가장 비용이 적은 노드선택
한번 처리된 노드의 최단 거리는 고정되어 바뀔 수 없다. -> greedy
	한 단계당 하나의 노드에 대한 최단거리를 확실히 찾는것으로 이해할 수 있다.
다익스트라 알고리즘을 수행한뒤에 테이블에 각 노드까지의 최단거리 정보가 저장됩니다.
	완벽한 형태의 최단 경로를 구하려면 소스코드에 추가적인 기능을 더 넣어야합니다.

노드의 개수가 10000개가 넘어갈 때
우선순위 큐 형태로 자료구조를 만드는 게 좋다.
우선순위가 가장 높은 데이터를 가장 먼저 삭제한다.
파이썬에는 최소힙을 heapq를 임포트했을 때 만들어진 최소힙을 사용할 수 있으나 최대힙은 없기 때문에 -부호를 붙여서 데이터를 집어넣고 pop할 때도 데이터를 -를 붙인다면 최대힙과 같은결과를 얻을 수 있다.

플로이드 워셜 알고리즘
모든 노드에서 다른 모든 노드까지의 최단 경로를 모두 계산한다.
다익스트라 알고리즘과 마찬가지로 단계별로 거쳐 가는 노드를 기준으로 알고리즘을 수행한다.
다만 매단계마다 방문하지 않은 노드 중에 최단거리를 갖는 노드를 찾는 과정이 필요하지 않다.
2차원 테이블을 이용해서 최단거리 정보를 기록할 수 있다.
다이나믹 프로그래밍 유형에 속한다.

특정한 노드 k를 거쳐 가는 경우를 확인한다.
	a에서 b로 가는것보다 a -> k -> b 가 더 빠른지 검사한다.

Dab = min(Dab, Dak + Dkb)
3중반복문으로 구현하면된다.


knapsack problem
무게제한 안에서 넣을 수 있는 최대 가치는 얼마인가
다이나믹 프로그래밍으로 해결할 수 있다.

분수 배낭 문제 물건을 쪼갤 수 있는 배낭문제
단위 무게당 이윤이 가장 큰 물건으로 다 채우고 순서대로 다음 물건을 넣고 더이상 넣을 수 없을 때는 쪼개서 남아있는 공간에 넣는다.
nlogn의 시간복잡도가 걸린다.

set cover 집합 덮개 문제
어떠한 전체 집합과 그 집합의 부분집합들이 주어졌을 때 부분집합들 중에서 가능한 한 적은 집합을 골라서 그 집합들의 합집합이 원래 전체집합이 되도록 한다.
- 부분집합들이 전체 집합을 덮도록 만들지만 부분집합들이 가장 작게 만드는것이 목표이다.
비용이 적으면서 많은 건물을 커버할 수 있는 부분집합을 선택한다.
전체 집합과 부분집합들이 주어졌을 때
부분집합들을 합집합하면 전체 집합과 동일한 집합이 될 수 있도록 만든다.
집합은 동일한 원소가 여러개 있어도 1개 있다고 취급한다.


huffman 압축 알고리즘
압축을 하지 않으면 각글자마다 비트를 부여해줘야 하기 때문에 압축을 해야한다.
많이 발생하는 문자에 적은 비트를 할당한다.

발생빈도가 가장 낮은 두 문자를 선택해서 하나로 합친다.
더 작은 값이 왼쪽으로 더 큰값이 오른쪽이다.
만들어진 트리에서 왼쪽 간선은 0 오른쪽 간선은 1을 가진다고 하고 루트 부터 층마다 검사하면서 숫자가 아닌 데이터를 가진 노드에 이름을 노드까지 가면서 지나온 간선을 순서대로 문자의 덧셈의 방식으로 더한 문자열을 기준으로 비트를 부여한다.

문자열의 문자 빈도수 체크 radixsort로 할 수 있어보인다.
